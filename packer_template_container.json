{
  "variables": {
    "login_password": null,
    "image": "amazonlinux:2.0.20191016.0",
    "script_install_yum": "common-scripts/install_ansible_by_yum_from_epel.sh"
  },
  "builders": [
    {
      "type": "docker",
      "image": "{{user `image`}}",
      "commit": true,
      "changes": [
        "ENV PYENV_ROOT /opt/pyenv",
        "ENV PATH /opt/pyenv/shims:${PYENV_ROOT}/bin:${PATH}",
        "ENTRYPOINT [\"/bin/bash\", \"-l\"]"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "scripts": [
        "{{user `script_install_yum`}}"
      ]
    },{
      "type": "ansible-local",
      "playbook_file": "playbook_dummy.yml",
      "playbook_dir": "./",
      "staging_directory": "/tmp/packer-provisioner-ansible-local"
    },{
      "type": "shell",
      "inline": [
        "cd /tmp/packer-provisioner-ansible-local; ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook playbook.yml -vvv -c local -i inventories/container -t pip"
      ]
    },{
      "type": "shell",
      "scripts": [
        "common-scripts/uninstall_ansible_by_yum.sh",
        "common-scripts/install_ansible_by_pip.sh"
      ]
    },{
      "type": "shell",
      "inline": [
        "cd /tmp/packer-provisioner-ansible-local; ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 bash -lc 'ansible-playbook playbook.yml -vvv -c local -i inventories/container -t cleaning'",
        "rm -rf /tmp/*"
      ]
    }
  ],
  "post-processors": [
    [
      {
        "type": "docker-tag",
        "repository": "futureys/amazonlinux",
        "tag": "2.201911.01"
      },
      {
        "type": "docker-push",
        "login": true,
        "login_username": "futureys",
        "login_password": "{{user `login_password`}}"
      }
    ]
  ]
}